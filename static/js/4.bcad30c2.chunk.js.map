{"version":3,"sources":["components/cards/index.js","utils/hooks/useMount.js","pages/body/main/index.js","pages/body/favorites/index.js","components/movieInfo/index.js","pages/body/body.js"],"names":["Card","id","title","poster","backdrop","overview","voteCount","searchCard","popularity","isFavorites","releaseDate","isMovieInfo","history","useHistory","pathname","useLocation","useStore","actions","setFavorites","removeFavorites","className","classNames","alt","dataSrc","img","onClick","push","src","getTitle","fill","useMount","onMount","noop","useEffect","withSuspense","lazy","MovieInfo","props","videos","map","videoKey","key","url","baseUrlVideo","width","height","frameBorder","allowFullScreen","allow","pos","loadState","Body","state","data","favorites","searchResult","getData","exact","path","render","match","params","infoData","find","item","component","Favorites","from","to"],"mappings":"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","file":"static/js/4.bcad30c2.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport LazyImage from 'lazy-image-reactjs';\nimport { BsHeart, BsHeartFill } from 'react-icons/bs';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { getTitle } from 'utils';\nimport { useStore } from 'store';\nimport img from 'assets/code.jpg';\n\nimport './index.css';\n\nfunction Card ({\n  id,\n  title, \n  poster,\n  backdrop,\n  overview,\n  voteCount,\n  searchCard,\n  popularity,\n  isFavorites,\n  releaseDate,\n  isMovieInfo,\n}) {\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  const { actions: { setFavorites, removeFavorites } } = useStore();\n\n  return (\n    <div \n      className={classNames({\n        'card': !isMovieInfo,\n        'movie-info': isMovieInfo,\n      })}\n    >\n      <LazyImage\n        alt={title}\n        dataSrc={img}\n        onClick={() => !isMovieInfo && history.push(`${pathname}/${id}`)}\n        src={!isMovieInfo ? poster : backdrop}\n      />\n      <div className=\"card-info\">\n        <h5>{getTitle(title)}</h5>\n        <p>Vote Count: {voteCount}</p>\n        <p>Popularity: {popularity}</p>\n        <p>Release: {releaseDate}</p>\n        {\n          !isMovieInfo && !searchCard\n            ? isFavorites\n              ? <BsHeartFill\n                fill=\"red\"\n                className=\"favorite\"\n                onClick={() => removeFavorites(id)}\n              />\n              : <BsHeart\n                fill=\"white\"\n                className=\"favorite\"\n                onClick={() => setFavorites(id)}\n              />\n            : null\n        }\n        { isMovieInfo && <p>{overview}</p> }\n      </div>\n    </div>\n  )\n}\n\nexport default Card;\n","import { useEffect } from 'react';\n\nimport { noop } from 'utils';\n\nconst useMount = (onMount = noop) => useEffect(onMount, []);\n\nexport default useMount;\n","import { lazy } from 'react';\nimport { withSuspense } from 'utils';\n\nexport default withSuspense(lazy(() => import('./main')));\n","import { lazy } from 'react';\nimport { withSuspense } from 'utils';\n\nexport default withSuspense(lazy(() => import('./favorites')));\n","import React from 'react';\n\nimport Card from 'components/cards';\nimport { baseUrlVideo } from 'configs';\n\nimport './index.css';\n\nconst MovieInfo = props => (\n  <div className=\"info\">\n    <Card isMovieInfo {...props} />\n    <div className=\"videos\">\n      { \n        props.videos.map(({ key: videoKey }) => {\n          const url = `${baseUrlVideo}${videoKey}`;\n          return (\n            <div\n              key={videoKey}\n            >\n              <iframe\n                src={url}\n                width=\"560\"\n                height=\"315\"\n                frameBorder=\"0\"\n                allowFullScreen\n                title={videoKey}\n                allow=\"accelerometer\"\n                className=\"videos-item\"\n              />\n            </div>\n          );\n        })\n      }\n    </div>\n  </div>\n);\n\nexport default MovieInfo;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport { useStore } from 'store';\nimport { loadState } from 'utils';\nimport { useMount } from 'utils/hooks';\n\nimport Main from './main';\nimport Favorites from './favorites';\nimport MovieInfo from 'components/movieInfo';\n\nconst pos = loadState('pos');\n\nfunction Body() {\n  const {\n    state: {\n      data,\n      favorites,\n      searchResult,\n    },\n    actions: {\n      getData,\n    }\n  } = useStore();\n\n  useMount(() => {\n    getData((pos && pos + 1) || 1);\n  });\n\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <Switch>\n          <Route exact path=\"/movies\">\n            <Main data={data} />\n          </Route>\n          <Route exact path=\"/search\">\n            <Main data={searchResult} />\n          </Route>\n          <Route\n            exact\n            path=\"/search/:id\"\n            render={({ match: { params: { id } } }) => {\n              const infoData = searchResult.find(item => item.id === +id);\n              return infoData && <MovieInfo {...infoData} />\n            }}\n          />\n          <Route\n            exact\n            path=\"/movies/:id\"\n            render={({ match: { params: { id } } }) => {\n              const infoData = data.find(item => item.id === +id);\n              return infoData && <MovieInfo {...infoData} />\n            }}\n          />\n          <Route exact path=\"/favorites\" component={Favorites} />\n          <Route\n            exact\n            path=\"/favorites/:id\"\n            render={({ match: { params: { id } } }) => {\n              const infoData = favorites.find(item => item.id === +id);\n              return infoData && <MovieInfo {...infoData} />\n            }}\n          />\n          <Redirect from=\"/\" to=\"/movies\" />\n        </Switch>\n      </div>\n    </>\n  )\n}\n\nexport default Body;\n"],"sourceRoot":""}